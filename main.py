import socket

def parse_data(data):
    parts = data.split()

    print(parts)

    id = str(int(parts[0]))
    imei = parts[6]
    numb_from = parts[1]
    numb_to = parts[14]
    name_from = parts[7] + " " + parts[8]
    name_to = parts[15] + " " + parts[16]
    date = format_date(parts[19])
    time = format_time(parts[20])
    duration = str(int(parts[21])) + " sec"
    
    parsed_data = f'''{{
    "{id}": {{
        "{imei}": {{
            "date": "{date}",
            "duration": "{duration}",
            "name_from": "{name_from}",
            "name_to": "{name_to}",
            "numb_from": "{numb_from}",
            "numb_to": "{numb_to}",
            "time": "{time}"
        }}
    }}
}}'''
    return parsed_data

def format_date(date):
    year = date[:4]
    month = date[5:7]
    day = date[8:10]
    return "{}.{}.{}".format(day, month, year)

def format_time(time):
    hour = time[:2]
    minute = time[3:5]
    second = time[6:8]
    return "{}-{}-{}".format(hour, minute, second)


server_address = ('194.87.46.252', 8000)
client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)


client_socket.connect(server_address)

whoami = client_socket.recv(1024).decode()
print(whoami)
client_socket.send('Oleg Shilkin'.encode())
code = client_socket.recv(1024).decode()
print(code)

while True:

    next = client_socket.recv(1024).decode()
    print(next)
    
    if "Nice, you're smart boy!" in next:
        print("END!")
        break


    parsed_data = parse_data(next)

    print(str(parsed_data))

    client_socket.send(str(parsed_data).encode())

    next2 = client_socket.recv(512).decode()
    print(next2)
